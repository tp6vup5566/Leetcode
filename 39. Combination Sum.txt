class Solution {
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> combine;
        dfs(ans,combine,candidates,0,target);
        return ans;
    }
    void dfs(vector<vector<int>>& ans,vector<int>& combine,vector<int>& candidates,int start,int target){
        if(target==0){
            ans.push_back(combine);
            return;
        }
        if(target<0){
            return;
        }
        for(int i=start;i<candidates.size();i++){
            combine.push_back(candidates[i]);
            dfs(ans,combine,candidates,i,target-candidates[i]);
            combine.pop_back();
        }
    }
};
